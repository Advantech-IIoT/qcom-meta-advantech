From 929349669c12fed345526bfad76f39a9a67b4426 Mon Sep 17 00:00:00 2001
From: Mantis Hsiang <quic_mantish@quicinc.com>
Date: Sun, 15 Sep 2024 19:55:54 +0800
Subject: [PATCH 1/3] GA1p1:Advantech:rom2860:enable ethernet rtl8211
 RGMII/SGMII

---
 dwxgmac2_core.c  |  2 +-
 tc956x_pci.c     | 28 +++++++++++++++---
 tc956x_qcom.c    | 44 +++++++++++++++++++++++++++++
 tc956xmac.h      |  7 +++++
 tc956xmac_main.c | 12 +++++---
 5 files changed, 84 insertions(+), 9 deletions(-)

diff --git a/dwxgmac2_core.c b/dwxgmac2_core.c
index 4b751cf..b1a5516 100755
--- a/dwxgmac2_core.c
+++ b/dwxgmac2_core.c
@@ -141,7 +141,7 @@ static void dwxgmac2_core_init(struct tc956xmac_priv *priv,
 		}
 	}
 #ifndef TC956X
-	if (priv->plat->interface == PHY_INTERFACE_MODE_RGMII)
+	if ((priv->plat->interface == PHY_INTERFACE_MODE_RGMII) || (priv->plat->interface == PHY_INTERFACE_MODE_RGMII_ID))
 		tx |= hw->link.speed1000;
 	else if (priv->plat->interface == PHY_INTERFACE_MODE_SGMII)
 		tx |= hw->link.speed2500;
diff --git a/tc956x_pci.c b/tc956x_pci.c
index 06c777d..af65270 100755
--- a/tc956x_pci.c
+++ b/tc956x_pci.c
@@ -1195,6 +1195,10 @@ static int tc956xmac_xgmac3_default_data(struct pci_dev *pdev,
 		plat->interface = PHY_INTERFACE_MODE_RGMII;
 		plat->max_speed = 1000;
 	}
+	if (plat->port_interface == ENABLE_RGMII_ID_INTERFACE) {
+		plat->interface = PHY_INTERFACE_MODE_RGMII_ID;
+		plat->max_speed = 1000;
+	}
 	if ((plat->port_interface == ENABLE_SGMII_INTERFACE) ||
 		(plat->port_interface == ENABLE_2500BASE_X_INTERFACE)) {
 		plat->interface = PHY_INTERFACE_MODE_SGMII;
@@ -2566,6 +2570,7 @@ static int tc956xmac_pci_probe(struct pci_dev *pdev,
 #endif
 #endif
 	int ret;
+	int overlay;
 	char version_str[32];
 #if defined(TC956X_PCIE_DSP_CUT_THROUGH) && defined(TC956X_SRIOV_PF)
 	u32 pcie_mode; /* Read Setting A/B */
@@ -2976,6 +2981,19 @@ static int tc956xmac_pci_probe(struct pci_dev *pdev,
 		res.port_interface = mac1_interface;
 	}
 
+	overlay = tc956x_platform_port_interface_overlay(&pdev->dev, &res);
+	if (overlay) {
+		plat->mdc_clk = res.mdc_clk;
+		plat->c45_needed = res.c45_state;
+
+		if (res.port_num == RM_PF0_ID) {
+			mac0_link_down_macrst = res.link_down_macrst == 1 ? ENABLE : DISABLE;
+		}
+		if (res.port_num == RM_PF1_ID) {
+			mac1_link_down_macrst = res.link_down_macrst == 1 ? ENABLE : DISABLE;
+		}
+	}
+
 	plat->port_interface = res.port_interface;
 
 	if (res.port_num == RM_PF0_ID) {
@@ -3203,7 +3221,8 @@ static int tc956xmac_pci_probe(struct pci_dev *pdev,
 		/* Interface configuration for port1*/
 		ret = readl(res.addr + NEMAC1CTL_OFFSET);
 		ret &= ~(NEMACCTL_SP_SEL_MASK | NEMACCTL_PHY_INF_SEL_MASK);
-		if (res.port_interface == ENABLE_RGMII_INTERFACE)
+		if ((res.port_interface == ENABLE_RGMII_INTERFACE) ||
+			(res.port_interface == ENABLE_RGMII_ID_INTERFACE))
 			ret |= NEMACCTL_SP_SEL_RGMII_1000M;
 		else if ((res.port_interface == ENABLE_SGMII_INTERFACE) ||
 			(res.port_interface == ENABLE_2500BASE_X_INTERFACE))
@@ -3260,7 +3279,7 @@ static int tc956xmac_pci_probe(struct pci_dev *pdev,
 
 #ifndef TC956X_SRIOV_VF
 #ifdef TC956X
-	if ((res.port_num == RM_PF1_ID) && (res.port_interface == ENABLE_RGMII_INTERFACE)) {
+	if ((res.port_num == RM_PF1_ID) && ((res.port_interface == ENABLE_RGMII_INTERFACE) || (res.port_interface == ENABLE_RGMII_ID_INTERFACE))) {
 		writel(0x00000000, res.addr + 0x1050);
 		writel(0xF300F300, res.addr + 0x107C);
 	}
@@ -3799,7 +3818,8 @@ static int tc956x_pcie_resume_config(struct pci_dev *pdev)
 		/* Interface configuration for port1*/
 		ret = readl(priv->tc956x_SFR_pci_base_addr + NEMAC1CTL_OFFSET);
 		ret &= ~(NEMACCTL_SP_SEL_MASK | NEMACCTL_PHY_INF_SEL_MASK);
-		if (priv->port_interface == ENABLE_RGMII_INTERFACE)
+		if ((priv->port_interface == ENABLE_RGMII_INTERFACE) ||
+			(priv->port_interface == ENABLE_RGMII_ID_INTERFACE))
 			ret |= NEMACCTL_SP_SEL_RGMII_1000M;
 		else if ((priv->port_interface == ENABLE_SGMII_INTERFACE) ||
 			(priv->port_interface == ENABLE_2500BASE_X_INTERFACE))
@@ -3990,7 +4010,7 @@ static int tc956x_pcie_resume(struct device *dev)
 	/* Call tc956xmac_resume() */
 #ifdef TC956X_SRIOV_PF
 	tc956xmac_resume(&pdev->dev);
-	if ((priv->port_num == RM_PF1_ID) && (priv->port_interface == ENABLE_RGMII_INTERFACE)) {
+	if ((priv->port_num == RM_PF1_ID) && ((priv->port_interface == ENABLE_RGMII_INTERFACE) ||(priv->port_interface == ENABLE_RGMII_ID_INTERFACE))) {
 		writel(NEMACTXCDLY_DEFAULT, priv->ioaddr + TC9563_CFG_NEMACTXCDLY);
 		writel(NEMACIOCTL_DEFAULT, priv->ioaddr + TC9563_CFG_NEMACIOCTL);
 	}
diff --git a/tc956x_qcom.c b/tc956x_qcom.c
index 8737ff0..c798b77 100755
--- a/tc956x_qcom.c
+++ b/tc956x_qcom.c
@@ -234,3 +234,47 @@ int tc956x_platform_resume(struct tc956xmac_priv *priv)
 
 	return ret;
 }
+
+int tc956x_platform_port_interface_overlay(struct device *dev, struct tc956xmac_resources *res)
+{
+	int ret = 0;
+	u32 interface;
+	u32 mdc_clk;
+	u32 c45_state;
+	u32 link_down_macrst;
+	u32 plat_interface;
+
+	if (of_property_read_u32(dev->of_node, "qcom,phy-port-interface", &interface)) {
+		dev_err(dev, "Failed to get phy port interface\n");
+		return ret;
+	} else {
+		dev_err(dev, "phy port interface overlay to %d from %d\n", interface, res->port_interface);
+		res->port_interface = interface;
+
+		if (of_property_read_u32(dev->of_node, "qcom,mdc-clk", &mdc_clk)) {
+			dev_err(dev, "Failed to get mdc clk\n");
+			return ret;
+		} else {
+			dev_err(dev, "mdc clk overlay to %d\n", mdc_clk);
+			res->mdc_clk = mdc_clk;
+		}
+
+		if (of_property_read_u32(dev->of_node, "qcom,c45-state", &c45_state)) {
+			dev_err(dev, "Failed to get c45 state\n");
+			return ret;
+		} else {
+			dev_err(dev, "c45 state overlay to %d\n", c45_state);
+			res->c45_state = c45_state;
+		}
+
+		if (of_property_read_u32(dev->of_node, "qcom,link-down-macrst", &link_down_macrst)) {
+			dev_err(dev, "Failed to get link down macrst\n");
+			return ret;
+		} else {
+			dev_err(dev, "link down macrst overlay to %d\n", link_down_macrst);
+			res->link_down_macrst = link_down_macrst;
+		}
+		ret = 1;
+	}
+	return ret;
+}
diff --git a/tc956xmac.h b/tc956xmac.h
index af21223..0aa152c 100755
--- a/tc956xmac.h
+++ b/tc956xmac.h
@@ -407,6 +407,7 @@
 #define ENABLE_RGMII_INTERFACE		2
 #define ENABLE_SGMII_INTERFACE		3
 #define ENABLE_2500BASE_X_INTERFACE	4
+#define ENABLE_RGMII_ID_INTERFACE	5
 #define MTL_FPE_AFSZ_64		0
 #define MTL_FPE_AFSZ_128	1
 #define MTL_FPE_AFSZ_192	2
@@ -472,6 +473,10 @@ struct tc956xmac_resources {
 	unsigned int tx_lpi_timer; /* Parameter to store kernel module parameter for LPI Auto Entry Timer */
 #endif
 	uint16_t pci_bd; /* PCI bus and device ID of self */
+
+	unsigned int mdc_clk;
+	unsigned int c45_state;
+	unsigned int link_down_macrst;
 };
 
 struct tc956xmac_tx_info {
@@ -1253,11 +1258,13 @@ int tc956x_platform_probe(struct tc956xmac_priv *priv, struct tc956xmac_resource
 int tc956x_platform_remove(struct tc956xmac_priv *priv);
 int tc956x_platform_suspend(struct tc956xmac_priv *priv);
 int tc956x_platform_resume(struct tc956xmac_priv *priv);
+int tc956x_platform_port_interface_overlay(struct device *dev, struct tc956xmac_resources *res);
 #else
 int tc956x_platform_probe(struct tc956xmac_priv *priv, struct tc956xmac_resources *res);
 static inline int tc956x_platform_remove(struct tc956xmac_priv *priv) { return 0; }
 static inline int tc956x_platform_suspend(struct tc956xmac_priv *priv) { return 0; }
 int tc956x_platform_resume(struct tc956xmac_priv *priv);
+static inline int tc956x_platform_port_interface_overlay(struct device *dev, struct tc956xmac_resources *res) { return 0; }
 #endif
 
 int tc956x_GPIO_OutputConfigPin(struct tc956xmac_priv *priv, u32 gpio_pin, u8 out_value);
diff --git a/tc956xmac_main.c b/tc956xmac_main.c
index b426bd0..3ce4651 100644
--- a/tc956xmac_main.c
+++ b/tc956xmac_main.c
@@ -4401,7 +4401,8 @@ static int tc956xmac_init_phy(struct net_device *dev)
 	edata.advertised = 0;
 
 	if (priv->phylink) {
-		if (priv->plat->interface != PHY_INTERFACE_MODE_RGMII) {
+		if (priv->plat->interface != PHY_INTERFACE_MODE_RGMII &&
+			priv->plat->interface != PHY_INTERFACE_MODE_RGMII_ID) {
 			netdev_info(priv->dev, "Ethtool EEE Setting\n");
 			phylink_ethtool_set_eee(priv->phylink, &edata);
 #ifdef TC956X_5_G_2_5_G_EEE_SUPPORT
-- 
2.25.1

