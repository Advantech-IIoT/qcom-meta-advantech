From 53c347e35d3874ebc9b27a4f5168965f2b8e3153 Mon Sep 17 00:00:00 2001
From: Darren Huang <darren.huang@advantech.com.tw>
Date: Wed, 12 Jun 2024 15:11:06 +0800
Subject: [PATCH 05/35] support the RS-485 function of driver

---
 drivers/tty/serial/qcom_geni_serial.c | 19 +++++++++++++++++--
 1 file changed, 17 insertions(+), 2 deletions(-)

diff --git a/drivers/tty/serial/qcom_geni_serial.c b/drivers/tty/serial/qcom_geni_serial.c
index 2b4125cebec6..3ee710041f72 100644
--- a/drivers/tty/serial/qcom_geni_serial.c
+++ b/drivers/tty/serial/qcom_geni_serial.c
@@ -155,6 +155,7 @@ struct qcom_geni_serial_port {
 
 	struct qcom_geni_private_data private_data;
 	const struct qcom_geni_device_data *dev_data;
+	int flow_control;
 };
 
 static const struct uart_ops qcom_geni_console_pops;
@@ -271,8 +272,12 @@ static void qcom_geni_serial_set_mctrl(struct uart_port *uport,
 
 	if (!(mctrl & TIOCM_RTS) && !uport->suspended)
 		uart_manual_rfr = UART_MANUAL_RFR_EN | UART_RFR_NOT_READY;
+
+	if (port->flow_control){
+		uart_manual_rfr |= (UART_MANUAL_RFR_EN | UART_RFR_NOT_READY);
+	}
 	writel(uart_manual_rfr, uport->membase + SE_UART_MANUAL_RFR);
-	serial_trace_log(uport->dev, "%s: uart_manual_rfr: %0x%x\n", __func__, uart_manual_rfr);
+	serial_trace_log(uport->dev, "%s: uart_manual_rfr: 0x%x\n", __func__, uart_manual_rfr);
 }
 
 static const char *qcom_geni_serial_get_type(struct uart_port *uport)
@@ -675,6 +680,9 @@ static void qcom_geni_serial_start_tx_dma(struct uart_port *uport)
 
 	xmit_size = CIRC_CNT_TO_END(xmit->head, xmit->tail, UART_XMIT_SIZE);
 
+	if (port->flow_control) {
+		writel(0, uport->membase + SE_UART_MANUAL_RFR);
+	}
 	qcom_geni_serial_setup_tx(uport, xmit_size);
 
 	ret = geni_se_tx_dma_prep(&port->se, &xmit->buf[xmit->tail],
@@ -1067,8 +1075,11 @@ static irqreturn_t qcom_geni_serial_isr(int isr, void *dev)
 	if (dma) {
 		serial_trace_log(uport->dev, "%s: dma_tx_status: 0x%x, dma_rx_status: 0x%x",
 				 __func__, dma_tx_status, dma_rx_status);
-		if (dma_tx_status & TX_DMA_DONE)
+		if (dma_tx_status & TX_DMA_DONE) {
 			qcom_geni_serial_handle_tx_dma(uport);
+			if (port->flow_control)
+				writel(UART_MANUAL_RFR_EN | UART_RFR_NOT_READY, uport->membase + SE_UART_MANUAL_RFR);
+		}
 
 		if (dma_rx_status) {
 			if (dma_rx_status & RX_RESET_DONE)
@@ -1662,6 +1673,10 @@ static int qcom_geni_serial_probe(struct platform_device *pdev)
 	if (uport->private_data)
 		return -ENODEV;
 
+	if (of_property_read_bool(pdev->dev.of_node, "qcom,flow-control")) {
+		port->flow_control = 1;
+	}
+
 	uport->dev = &pdev->dev;
 	port->dev_data = data;
 	port->se.dev = &pdev->dev;
-- 
2.47.0

